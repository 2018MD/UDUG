{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./support/noop.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/weapp.engine.io/lib/transport.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/component-bind/index.js","webpack:///./lib/on.js","webpack:///./lib/socket.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/weapp.engine.io/lib/transports/index.js","webpack:///./lib/manager.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/backo2/index.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/weapp.engine.io/lib/transports/websocket-weapp.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/node-libs-browser/node_modules/isarray/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/weapp.engine.io/lib/transports/polling.js","webpack:///./node_modules/weapp.engine.io/lib/transports/polling-xhr-weapp.js","webpack:///./node_modules/weapp.engine.io/lib/socket.js","webpack:///./node_modules/weapp.engine.io/lib/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./lib/url.js","webpack:///./lib/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","global","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","length","next","eachWithIndex","el","cb","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","apply","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","len","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","push","total","Emitter","obj","mixin","on","addEventListener","event","fn","_callbacks","once","off","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","splice","emit","args","slice","listeners","hasListeners","str","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","b","constructor","parser","debug","Transport","opts","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","enablesXDR","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","onError","desc","Error","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","isArray","arr","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","JSON","stringify","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","concat","ev","toArray","parseqs","hasBin","Socket","events","connect","connect_error","connect_timeout","connecting","disconnect","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","autoConnect","subEvents","subs","onopen","options","compress","pop","onclose","reason","onpacket","onconnect","onevent","onack","ondisconnect","ack","self","sent","emitBuffered","indexOf","prev","alphabet","seed","num","Math","floor","yeast","now","Date","decoded","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","isBuffer","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","withNativeBlob","withNativeFile","File","XHR","websocket","polling","xdomain","xscheme","eio","Backoff","has","Manager","uri","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","jitter","timeout","lastPing","packetBuffer","_parser","encoder","decoder","emitAll","updateSocketIds","generateId","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","attempts","skipReconnect","openSub","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","index","processPacketQueue","shift","subsLength","reset","delay","duration","onreconnect","attempt","withNativeBuffer","withNativeArrayBuffer","re","parts","exec","source","host","authority","ipv6uri","ms","factor","rand","random","deviation","inherit","WS","forceBase64","perMessageDeflate","protocols","headers","params","url","header","method","success","socketTaskId","fail","wx","connectSocket","addEventListeners","onSocketOpen","onSocketClose","onSocketMessage","onSocketError","sendSocketMessage","schema","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","BlobConstructor","chars","lookup","arraybuffer","encoded1","encoded2","encoded3","encoded4","bufferLength","webpackPolyfill","deprecate","paths","children","__WEBPACK_AMD_DEFINE_RESULT__","freeExports","freeGlobal","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","output","counter","checkScalarValue","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","byteString","tmp","ucs2encode","count","err_cb","bail","proxy","abv","ii","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","Polling","poll","pause","onPause","doPoll","callbackfn","doWrite","sid","requestTimeout","Request","onLoad","request","req","sendXhr","pollXhr","onSuccess","fromError","transports","parseuri","forceJSONP","jsonp","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","threshold","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","transport","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","loc","location","href","cache","managers","sameNamespace","forceNew","multiplex"],"mappings":"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","file":"weapp.socket.io.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","module.exports = function() {\r\n  return function() {}\r\n}\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser')\nvar Emitter = require('component-emitter')\nvar debug = require('debug')('engine.io-client:transport:')\n/**\n * Module exports.\n */\n\nmodule.exports = Transport\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path\n  this.hostname = opts.hostname\n  this.port = opts.port\n  this.secure = opts.secure\n  this.query = opts.query\n  this.timestampParam = opts.timestampParam\n  this.timestampRequests = opts.timestampRequests\n  this.readyState = ''\n  this.agent = opts.agent || false\n  this.socket = opts.socket\n  this.enablesXDR = opts.enablesXDR\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx\n  this.key = opts.key\n  this.passphrase = opts.passphrase\n  this.cert = opts.cert\n  this.ca = opts.ca\n  this.ciphers = opts.ciphers\n  this.rejectUnauthorized = opts.rejectUnauthorized\n  this.forceNode = opts.forceNode\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders\n  this.localAddress = opts.localAddress\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype)\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function(msg, desc) {\n  var err = new Error(msg)\n  err.type = 'TransportError'\n  err.description = desc\n  this.emit('error', err)\n  return this\n}\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function() {\n  debug('called open func: ', this.readyState)\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening'\n    this.doOpen()\n  }\n\n  return this\n}\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function() {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose()\n    this.onClose()\n  }\n\n  return this\n}\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets) {\n  if ('open' === this.readyState) {\n    this.write(packets)\n  } else {\n    throw new Error('Transport not open')\n  }\n}\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function() {\n  debug('wx socket open called transport onOpen')\n  this.readyState = 'open'\n  this.writable = true\n  this.emit('open')\n}\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data) {\n  debug('transport onData: ', data)\n  var packet = parser.decodePacket(data, this.socket.binaryType)\n  debug('decoded packet: ', packet)\n  this.onPacket(packet)\n}\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function(packet) {\n  this.emit('packet', packet)\n}\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function() {\n  this.readyState = 'closed'\n  this.emit('close')\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = on;\r\n\r\n/**\r\n * Helper for subscriptions.\r\n *\r\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\r\n * @param {String} event name\r\n * @param {Function} callback\r\n * @api public\r\n */\r\n\r\nfunction on (obj, ev, fn) {\r\n  obj.on(ev, fn);\r\n  return {\r\n    destroy: function () {\r\n      obj.removeListener(ev, fn);\r\n    }\r\n  };\r\n}\r\n","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = require('socket.io-parser');\r\nvar Emitter = require('component-emitter');\r\nvar toArray = require('to-array');\r\nvar on = require('./on');\r\nvar bind = require('component-bind');\r\nvar debug = require('debug')('socket.io-client:socket');\r\nvar parseqs = require('parseqs');\r\nvar hasBin = require('has-binary2');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = Socket;\r\n\r\n/**\r\n * Internal events (blacklisted).\r\n * These events can't be emitted by the user.\r\n *\r\n * @api private\r\n */\r\n\r\nvar events = {\r\n  connect: 1,\r\n  connect_error: 1,\r\n  connect_timeout: 1,\r\n  connecting: 1,\r\n  disconnect: 1,\r\n  error: 1,\r\n  reconnect: 1,\r\n  reconnect_attempt: 1,\r\n  reconnect_failed: 1,\r\n  reconnect_error: 1,\r\n  reconnecting: 1,\r\n  ping: 1,\r\n  pong: 1\r\n};\r\n\r\n/**\r\n * Shortcut to `Emitter#emit`.\r\n */\r\n\r\nvar emit = Emitter.prototype.emit;\r\n\r\n/**\r\n * `Socket` constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Socket (io, nsp, opts) {\r\n  this.io = io;\r\n  this.nsp = nsp;\r\n  this.json = this; // compat\r\n  this.ids = 0;\r\n  this.acks = {};\r\n  this.receiveBuffer = [];\r\n  this.sendBuffer = [];\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  this.flags = {};\r\n  if (opts && opts.query) {\r\n    this.query = opts.query;\r\n  }\r\n  if (this.io.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Subscribe to open, close and packet events\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.subEvents = function () {\r\n  if (this.subs) return;\r\n\r\n  var io = this.io;\r\n  this.subs = [\r\n    on(io, 'open', bind(this, 'onopen')),\r\n    on(io, 'packet', bind(this, 'onpacket')),\r\n    on(io, 'close', bind(this, 'onclose'))\r\n  ];\r\n};\r\n\r\n/**\r\n * \"Opens\" the socket.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.open =\r\nSocket.prototype.connect = function () {\r\n  if (this.connected) return this;\r\n\r\n  this.subEvents();\r\n  this.io.open(); // ensure open\r\n  if ('open' === this.io.readyState) this.onopen();\r\n  this.emit('connecting');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a `message` event.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.send = function () {\r\n  var args = toArray(arguments);\r\n  args.unshift('message');\r\n  this.emit.apply(this, args);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Override `emit`.\r\n * If the event is in `events`, it's emitted normally.\r\n *\r\n * @param {String} event name\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.emit = function (ev) {\r\n  if (events.hasOwnProperty(ev)) {\r\n    emit.apply(this, arguments);\r\n    return this;\r\n  }\r\n\r\n  var args = toArray(arguments);\r\n  var packet = {\r\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\r\n    data: args\r\n  };\r\n\r\n  packet.options = {};\r\n  packet.options.compress = !this.flags || false !== this.flags.compress;\r\n\r\n  // event ack callback\r\n  if ('function' === typeof args[args.length - 1]) {\r\n    debug('emitting packet with ack id %d', this.ids);\r\n    this.acks[this.ids] = args.pop();\r\n    packet.id = this.ids++;\r\n  }\r\n\r\n  if (this.connected) {\r\n    this.packet(packet);\r\n  } else {\r\n    this.sendBuffer.push(packet);\r\n  }\r\n\r\n  this.flags = {};\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.packet = function (packet) {\r\n  packet.nsp = this.nsp;\r\n  this.io.packet(packet);\r\n};\r\n\r\n/**\r\n * Called upon engine `open`.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onopen = function () {\r\n  debug('transport is open - connecting');\r\n\r\n  // write connect packet if necessary\r\n  if ('/' !== this.nsp) {\r\n    if (this.query) {\r\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\r\n      debug('sending connect packet with query %s', query);\r\n      this.packet({type: parser.CONNECT, query: query});\r\n    } else {\r\n      this.packet({type: parser.CONNECT});\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon engine `close`.\r\n *\r\n * @param {String} reason\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onclose = function (reason) {\r\n  debug('close (%s)', reason);\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  delete this.id;\r\n  this.emit('disconnect', reason);\r\n};\r\n\r\n/**\r\n * Called with socket packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onpacket = function (packet) {\r\n  if (packet.nsp !== this.nsp) return;\r\n\r\n  switch (packet.type) {\r\n    case parser.CONNECT:\r\n      this.onconnect();\r\n      break;\r\n\r\n    case parser.EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.BINARY_EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.BINARY_ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.DISCONNECT:\r\n      this.ondisconnect();\r\n      break;\r\n\r\n    case parser.ERROR:\r\n      this.emit('error', packet.data);\r\n      break;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon a server event.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onevent = function (packet) {\r\n  var args = packet.data || [];\r\n  debug('emitting event %j', args);\r\n\r\n  if (null != packet.id) {\r\n    debug('attaching ack callback to event');\r\n    args.push(this.ack(packet.id));\r\n  }\r\n\r\n  if (this.connected) {\r\n    emit.apply(this, args);\r\n  } else {\r\n    this.receiveBuffer.push(args);\r\n  }\r\n};\r\n\r\n/**\r\n * Produces an ack callback to emit with an event.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ack = function (id) {\r\n  var self = this;\r\n  var sent = false;\r\n  return function () {\r\n    // prevent double callbacks\r\n    if (sent) return;\r\n    sent = true;\r\n    var args = toArray(arguments);\r\n    debug('sending ack %j', args);\r\n\r\n    self.packet({\r\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\r\n      id: id,\r\n      data: args\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Called upon a server acknowlegement.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onack = function (packet) {\r\n  var ack = this.acks[packet.id];\r\n  if ('function' === typeof ack) {\r\n    debug('calling ack %s with %j', packet.id, packet.data);\r\n    ack.apply(this, packet.data);\r\n    delete this.acks[packet.id];\r\n  } else {\r\n    debug('bad ack %s', packet.id);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon server connect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onconnect = function () {\r\n  this.connected = true;\r\n  this.disconnected = false;\r\n  this.emit('connect');\r\n  this.emitBuffered();\r\n};\r\n\r\n/**\r\n * Emit buffered events (received and emitted).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.emitBuffered = function () {\r\n  var i;\r\n  for (i = 0; i < this.receiveBuffer.length; i++) {\r\n    emit.apply(this, this.receiveBuffer[i]);\r\n  }\r\n  this.receiveBuffer = [];\r\n\r\n  for (i = 0; i < this.sendBuffer.length; i++) {\r\n    this.packet(this.sendBuffer[i]);\r\n  }\r\n  this.sendBuffer = [];\r\n};\r\n\r\n/**\r\n * Called upon server disconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ondisconnect = function () {\r\n  debug('server disconnect (%s)', this.nsp);\r\n  this.destroy();\r\n  this.onclose('io server disconnect');\r\n};\r\n\r\n/**\r\n * Called upon forced client/server side disconnections,\r\n * this method ensures the manager stops tracking us and\r\n * that reconnections don't get triggered for this.\r\n *\r\n * @api private.\r\n */\r\n\r\nSocket.prototype.destroy = function () {\r\n  if (this.subs) {\r\n    // clean subscriptions to avoid reconnections\r\n    for (var i = 0; i < this.subs.length; i++) {\r\n      this.subs[i].destroy();\r\n    }\r\n    this.subs = null;\r\n  }\r\n\r\n  this.io.destroy(this);\r\n};\r\n\r\n/**\r\n * Disconnects the socket manually.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.close =\r\nSocket.prototype.disconnect = function () {\r\n  if (this.connected) {\r\n    debug('performing disconnect (%s)', this.nsp);\r\n    this.packet({ type: parser.DISCONNECT });\r\n  }\r\n\r\n  // remove socket from pool\r\n  this.destroy();\r\n\r\n  if (this.connected) {\r\n    // fire events\r\n    this.onclose('io client disconnect');\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the compress flag.\r\n *\r\n * @param {Boolean} if `true`, compresses the sending data\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.compress = function (compress) {\r\n  this.flags.compress = compress;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the binary flag\r\n *\r\n * @param {Boolean} whether the emitted data contains binary\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.binary = function (binary) {\r\n  this.flags.binary = binary;\r\n  return this;\r\n};\r\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * Module dependencies\n */\n// var XHR = require('./polling-xhr')\nvar XHR = require('./polling-xhr-weapp')\nvar websocket = require('./websocket-weapp')\n/**\n * Export transports.\n */\n\nexports.polling = polling\nexports.websocket = websocket\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr\n  var xd = false\n  var xs = false\n\n  opts.xdomain = xd\n  opts.xscheme = xs\n\n  return new XHR(opts)\n}\n","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar eio = require('weapp.engine.io');\r\nvar Socket = require('./socket');\r\nvar Emitter = require('component-emitter');\r\nvar parser = require('socket.io-parser');\r\nvar on = require('./on');\r\nvar bind = require('component-bind');\r\nvar debug = require('debug')('socket.io-client:manager');\r\nvar indexOf = require('indexof');\r\nvar Backoff = require('backo2');\r\n\r\n/**\r\n * IE6+ hasOwnProperty\r\n */\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Module exports\r\n */\r\n\r\nmodule.exports = Manager;\r\n\r\n/**\r\n * `Manager` constructor.\r\n *\r\n * @param {String} engine instance or engine uri/opts\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Manager (uri, opts) {\r\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\r\n  if (uri && ('object' === typeof uri)) {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n  opts = opts || {};\r\n\r\n  opts.path = opts.path || '/socket.io';\r\n  this.nsps = {};\r\n  this.subs = [];\r\n  this.opts = opts;\r\n  this.reconnection(opts.reconnection !== false);\r\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\r\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\r\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\r\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\r\n  this.backoff = new Backoff({\r\n    min: this.reconnectionDelay(),\r\n    max: this.reconnectionDelayMax(),\r\n    jitter: this.randomizationFactor()\r\n  });\r\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\r\n  this.readyState = 'closed';\r\n  this.uri = uri;\r\n  this.connecting = [];\r\n  this.lastPing = null;\r\n  this.encoding = false;\r\n  this.packetBuffer = [];\r\n  var _parser = opts.parser || parser;\r\n  this.encoder = new _parser.Encoder();\r\n  this.decoder = new _parser.Decoder();\r\n  this.autoConnect = opts.autoConnect !== false;\r\n  if (this.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Propagate given event to sockets and emit on `this`\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.emitAll = function () {\r\n  this.emit.apply(this, arguments);\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Update `socket.id` of all sockets\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.updateSocketIds = function () {\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].id = this.generateId(nsp);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * generate `socket.id` for the given `nsp`\r\n *\r\n * @param {String} nsp\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nManager.prototype.generateId = function (nsp) {\r\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\r\n};\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Manager.prototype);\r\n\r\n/**\r\n * Sets the `reconnection` config.\r\n *\r\n * @param {Boolean} true/false if it should automatically reconnect\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnection = function (v) {\r\n  if (!arguments.length) return this._reconnection;\r\n  this._reconnection = !!v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the reconnection attempts config.\r\n *\r\n * @param {Number} max reconnection attempts before giving up\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionAttempts = function (v) {\r\n  if (!arguments.length) return this._reconnectionAttempts;\r\n  this._reconnectionAttempts = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelay = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelay;\r\n  this._reconnectionDelay = v;\r\n  this.backoff && this.backoff.setMin(v);\r\n  return this;\r\n};\r\n\r\nManager.prototype.randomizationFactor = function (v) {\r\n  if (!arguments.length) return this._randomizationFactor;\r\n  this._randomizationFactor = v;\r\n  this.backoff && this.backoff.setJitter(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the maximum delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelayMax = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelayMax;\r\n  this._reconnectionDelayMax = v;\r\n  this.backoff && this.backoff.setMax(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the connection timeout. `false` to disable\r\n *\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.timeout = function (v) {\r\n  if (!arguments.length) return this._timeout;\r\n  this._timeout = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Starts trying to reconnect if reconnection is enabled and we have not\r\n * started reconnecting yet\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.maybeReconnectOnOpen = function () {\r\n  // Only try to reconnect if it's the first time we're connecting\r\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\r\n    // keeps reconnection from firing twice for the same reconnection loop\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the current transport `socket`.\r\n *\r\n * @param {Function} optional, callback\r\n * @return {Manager} self\r\n * @api public\r\n */\r\n\r\nManager.prototype.open =\r\nManager.prototype.connect = function (fn, opts) {\r\n  debug('readyState %s', this.readyState);\r\n  if (~this.readyState.indexOf('open')) return this;\r\n\r\n  debug('opening %s', this.uri);\r\n  this.engine = eio(this.uri, this.opts);\r\n  var socket = this.engine;\r\n  var self = this;\r\n  this.readyState = 'opening';\r\n  this.skipReconnect = false;\r\n\r\n  // emit `open`\r\n  var openSub = on(socket, 'open', function () {\r\n    self.onopen();\r\n    fn && fn();\r\n  });\r\n\r\n  // emit `connect_error`\r\n  var errorSub = on(socket, 'error', function (data) {\r\n    debug('connect_error');\r\n    self.cleanup();\r\n    self.readyState = 'closed';\r\n    self.emitAll('connect_error', data);\r\n    if (fn) {\r\n      var err = new Error('Connection error');\r\n      err.data = data;\r\n      fn(err);\r\n    } else {\r\n      // Only do this if there is no fn to handle the error\r\n      self.maybeReconnectOnOpen();\r\n    }\r\n  });\r\n\r\n  // emit `connect_timeout`\r\n  if (false !== this._timeout) {\r\n    var timeout = this._timeout;\r\n    debug('connect attempt will timeout after %d', timeout);\r\n\r\n    // set timer\r\n    var timer = setTimeout(function () {\r\n      debug('connect attempt timed out after %d', timeout);\r\n      openSub.destroy();\r\n      socket.close();\r\n      socket.emit('error', 'timeout');\r\n      self.emitAll('connect_timeout', timeout);\r\n    }, timeout);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n\r\n  this.subs.push(openSub);\r\n  this.subs.push(errorSub);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport open.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onopen = function () {\r\n  debug('open');\r\n\r\n  // clear old subs\r\n  this.cleanup();\r\n\r\n  // mark as open\r\n  this.readyState = 'open';\r\n  this.emit('open');\r\n\r\n  // add new subs\r\n  var socket = this.engine;\r\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\r\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\r\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\r\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\r\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\r\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\r\n};\r\n\r\n/**\r\n * Called upon a ping.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onping = function () {\r\n  this.lastPing = new Date();\r\n  this.emitAll('ping');\r\n};\r\n\r\n/**\r\n * Called upon a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onpong = function () {\r\n  this.emitAll('pong', new Date() - this.lastPing);\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondata = function (data) {\r\n  this.decoder.add(data);\r\n};\r\n\r\n/**\r\n * Called when parser fully decodes a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondecoded = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called upon socket error.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onerror = function (err) {\r\n  debug('error', err);\r\n  this.emitAll('error', err);\r\n};\r\n\r\n/**\r\n * Creates a new socket for the given `nsp`.\r\n *\r\n * @return {Socket}\r\n * @api public\r\n */\r\n\r\nManager.prototype.socket = function (nsp, opts) {\r\n  var socket = this.nsps[nsp];\r\n  if (!socket) {\r\n    socket = new Socket(this, nsp, opts);\r\n    this.nsps[nsp] = socket;\r\n    var self = this;\r\n    socket.on('connecting', onConnecting);\r\n    socket.on('connect', function () {\r\n      socket.id = self.generateId(nsp);\r\n    });\r\n\r\n    if (this.autoConnect) {\r\n      // manually call here since connecting event is fired before listening\r\n      onConnecting();\r\n    }\r\n  }\r\n\r\n  function onConnecting () {\r\n    if (!~indexOf(self.connecting, socket)) {\r\n      self.connecting.push(socket);\r\n    }\r\n  }\r\n\r\n  return socket;\r\n};\r\n\r\n/**\r\n * Called upon a socket close.\r\n *\r\n * @param {Socket} socket\r\n */\r\n\r\nManager.prototype.destroy = function (socket) {\r\n  var index = indexOf(this.connecting, socket);\r\n  if (~index) this.connecting.splice(index, 1);\r\n  if (this.connecting.length) return;\r\n\r\n  this.close();\r\n};\r\n\r\n/**\r\n * Writes a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nManager.prototype.packet = function (packet) {\r\n  debug('writing packet %j', packet);\r\n  var self = this;\r\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\r\n\r\n  if (!self.encoding) {\r\n    // encode, then write to engine with result\r\n    self.encoding = true;\r\n    this.encoder.encode(packet, function (encodedPackets) {\r\n      for (var i = 0; i < encodedPackets.length; i++) {\r\n        self.engine.write(encodedPackets[i], packet.options);\r\n      }\r\n      self.encoding = false;\r\n      self.processPacketQueue();\r\n    });\r\n  } else { // add packet to the queue\r\n    self.packetBuffer.push(packet);\r\n  }\r\n};\r\n\r\n/**\r\n * If packet buffer is non-empty, begins encoding the\r\n * next packet in line.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.processPacketQueue = function () {\r\n  if (this.packetBuffer.length > 0 && !this.encoding) {\r\n    var pack = this.packetBuffer.shift();\r\n    this.packet(pack);\r\n  }\r\n};\r\n\r\n/**\r\n * Clean up transport subscriptions and packet buffer.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.cleanup = function () {\r\n  debug('cleanup');\r\n\r\n  var subsLength = this.subs.length;\r\n  for (var i = 0; i < subsLength; i++) {\r\n    var sub = this.subs.shift();\r\n    sub.destroy();\r\n  }\r\n\r\n  this.packetBuffer = [];\r\n  this.encoding = false;\r\n  this.lastPing = null;\r\n\r\n  this.decoder.destroy();\r\n};\r\n\r\n/**\r\n * Close the current socket.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.close =\r\nManager.prototype.disconnect = function () {\r\n  debug('disconnect');\r\n  this.skipReconnect = true;\r\n  this.reconnecting = false;\r\n  if ('opening' === this.readyState) {\r\n    // `onclose` will not fire because\r\n    // an open event never happened\r\n    this.cleanup();\r\n  }\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  if (this.engine) this.engine.close();\r\n};\r\n\r\n/**\r\n * Called upon engine close.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onclose = function (reason) {\r\n  debug('onclose');\r\n\r\n  this.cleanup();\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  this.emit('close', reason);\r\n\r\n  if (this._reconnection && !this.skipReconnect) {\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Attempt a reconnection.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.reconnect = function () {\r\n  if (this.reconnecting || this.skipReconnect) return this;\r\n\r\n  var self = this;\r\n\r\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\r\n    debug('reconnect failed');\r\n    this.backoff.reset();\r\n    this.emitAll('reconnect_failed');\r\n    this.reconnecting = false;\r\n  } else {\r\n    var delay = this.backoff.duration();\r\n    debug('will wait %dms before reconnect attempt', delay);\r\n\r\n    this.reconnecting = true;\r\n    var timer = setTimeout(function () {\r\n      if (self.skipReconnect) return;\r\n\r\n      debug('attempting reconnect');\r\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\r\n      self.emitAll('reconnecting', self.backoff.attempts);\r\n\r\n      // check again for the case socket closed in above events\r\n      if (self.skipReconnect) return;\r\n\r\n      self.open(function (err) {\r\n        if (err) {\r\n          debug('reconnect attempt error');\r\n          self.reconnecting = false;\r\n          self.reconnect();\r\n          self.emitAll('reconnect_error', err.data);\r\n        } else {\r\n          debug('reconnect success');\r\n          self.onreconnect();\r\n        }\r\n      });\r\n    }, delay);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful reconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onreconnect = function () {\r\n  var attempt = this.backoff.attempts;\r\n  this.reconnecting = false;\r\n  this.backoff.reset();\r\n  this.updateSocketIds();\r\n  this.emitAll('reconnect', attempt);\r\n};\r\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","var Transport = require('../transport')\nvar parser = require('engine.io-parser')\nvar parseqs = require('parseqs')\nvar inherit = require('component-inherit')\nvar yeast = require('yeast')\nvar Buffer = require('buffer').Buffer\nvar debug = require('debug')('engine.io-client:websocket-weapp')\n\nmodule.exports = WS\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64\n  if (forceBase64) {\n    this.supportsBinary = false\n  }\n  this.perMessageDeflate = opts.perMessageDeflate\n  this.protocols = opts.protocols\n\n  debug('new WS: ', opts)\n  Transport.call(this, opts)\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport)\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket'\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function() {\n  var uri = this.uri()\n  var protocols = this.protocols\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate,\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress\n  }\n\n  const self = this\n  const params = {\n    url: uri,\n    protocols,\n    header: opts.headers,\n    method: opts.method || 'GET',\n    success: function(res) {\n      debug('websocket-weapp connected success.', res)\n      this.socketTaskId = res.socketTaskId\n    },\n    fail: function(err) {\n      this.emit('error', err)\n    },\n  }\n  debug('wx connect params: ', params)\n  wx.connectSocket(params)\n\n  this.addEventListeners()\n}\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function() {\n  var self = this\n\n  wx.onSocketOpen(function() {\n    debug('wx socket open')\n    self.onOpen()\n  })\n  wx.onSocketClose(function() {\n    self.onClose()\n  })\n  wx.onSocketMessage(function(ev) {\n    debug('wx socket on message.')\n    self.onData(ev.data)\n  })\n  wx.onSocketError(function(e) {\n    debug('wx socket error: ', e)\n    self.onError('websocket error', e)\n  })\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets) {\n  debug('write: ', packets)\n\n  var self = this\n  this.writable = false\n\n  var total = packets.length\n  for (var i = 0, l = total; i < l; i++) {\n    ;(function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        debug('encoded data: ', data)\n        wx.sendSocketMessage({\n          data: data,\n          success: function(res) {\n            debug('write success: ', res)\n          },\n          fail: function(err) {\n            debug('write fail: ', err)\n          },\n        })\n        --total || done()\n      })\n    })(packets[i])\n  }\n\n  function done() {\n    self.emit('flush')\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function() {\n      self.writable = true\n      self.emit('drain')\n    }, 0)\n  }\n}\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function() {\n  Transport.prototype.onClose.call(this)\n}\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function() {\n  if (typeof this.socketTaskId !== 'undefined') {\n    wx.onSocketClose(function(res) {\n      debug('websocket-weapp closed.', res)\n    })\n  }\n}\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function() {\n  var query = this.query || {}\n  var schema = this.secure ? 'wss' : 'ws'\n  var port = ''\n\n  // avoid port if default for schema\n  if (\n    this.port &&\n    (('wss' === schema && Number(this.port) !== 443) ||\n      ('ws' === schema && Number(this.port) !== 80))\n  ) {\n    port = ':' + this.port\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast()\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1\n  }\n\n  query = parseqs.encode(query)\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1\n  return (\n    schema +\n    '://' +\n    (ipv6 ? '[' + this.hostname + ']' : this.hostname) +\n    port +\n    this.path +\n    query\n  )\n}\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport')\nvar parseqs = require('parseqs')\nvar parser = require('engine.io-parser')\nvar inherit = require('component-inherit')\nvar yeast = require('yeast')\nvar debug = require('debug')('engine.io-client:polling')\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64\n  if (forceBase64) {\n    this.supportsBinary = false\n  }\n  Transport.call(this, opts)\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport)\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling'\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function() {\n  this.poll()\n}\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause) {\n  var self = this\n\n  this.readyState = 'pausing'\n\n  function pause() {\n    debug('paused')\n    self.readyState = 'paused'\n    onPause()\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause')\n      total++\n      this.once('pollComplete', function() {\n        debug('pre-pause polling complete')\n        --total || pause()\n      })\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause')\n      total++\n      this.once('drain', function() {\n        debug('pre-pause writing complete')\n        --total || pause()\n      })\n    }\n  } else {\n    pause()\n  }\n}\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function() {\n  debug('polling')\n  this.polling = true\n  this.doPoll()\n  this.emit('poll')\n}\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data) {\n  var self = this\n  debug('polling got data %s', data)\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen()\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose()\n      return false\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet)\n  }\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback)\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false\n    this.emit('pollComplete')\n\n    if ('open' === this.readyState) {\n      this.poll()\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState)\n    }\n  }\n}\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function() {\n  var self = this\n\n  function close() {\n    debug('writing close packet')\n    self.write([{ type: 'close' }])\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing')\n    close()\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close')\n    this.once('open', close)\n  }\n}\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets) {\n  var self = this\n  this.writable = false\n  var callbackfn = function() {\n    self.writable = true\n    self.emit('drain')\n  }\n\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn)\n  })\n}\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function() {\n  var query = this.query || {}\n  var schema = this.secure ? 'https' : 'http'\n  var port = ''\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast()\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1\n  }\n\n  query = parseqs.encode(query)\n\n  // avoid port if default for schema\n  if (\n    this.port &&\n    (('https' === schema && Number(this.port) !== 443) ||\n      ('http' === schema && Number(this.port) !== 80))\n  ) {\n    port = ':' + this.port\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1\n  return (\n    schema +\n    '://' +\n    (ipv6 ? '[' + this.hostname + ']' : this.hostname) +\n    port +\n    this.path +\n    query\n  )\n}\n","var Polling = require('./polling')\nvar Emitter = require('component-emitter')\nvar inherit = require('component-inherit')\nvar debug = require('debug')('engine.io-client:polling-xhr-weapp')\n\nmodule.exports = XHR\n\nfunction XHR(opts) {\n  Polling.call(this, opts)\n  this.requestTimeout = opts.requestTimeout\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling)\n\nXHR.prototype.request = function(opts) {\n  opts = opts || {}\n  opts.uri = this.uri()\n\n  debug('new XHR: ', opts)\n\n  return new Request(opts)\n}\n\n/**\n * Sends data.\n * @param {*} data\n * @param {*} fn\n */\nXHR.prototype.doWrite = function(data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary })\n  var self = this\n  req.on('success', fn)\n  req.on('error', function(err) {\n    self.onError('xhr post error', err)\n  })\n  this.sendXhr = req\n}\n\n/**\n * Starts a poll cycle.\n */\nXHR.prototype.doPoll = function() {\n  debug('xhr poll')\n  var req = this.request()\n  var self = this\n  req.on('data', function(data) {\n    self.onData(data)\n  })\n  req.on('error', function(err) {\n    self.onError('xhr poll error', err)\n  })\n  this.pollXhr = req\n}\n\n/**\n *\n * Request constructor\n * @param {*} opts\n */\nfunction Request(opts) {\n  this.method = opts.method || 'GET'\n  this.uri = opts.uri\n  this.data = undefined !== opts.data ? opts.data : null\n  this.requestTimeout = opts.requestTimeout\n\n  const self = this\n\n  this.success = function(res) {\n    self.data = res.data\n    self.onLoad()\n  }\n\n  this.fail = function(err) {\n    self.onError(err)\n  }\n\n  this.create()\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype)\n\nRequest.prototype.create = function() {\n  /**\n   * create http connect\n   */\n  wx.request({\n    url: this.uri,\n    method: this.method,\n    data: this.data,\n    success: this.success,\n    fail: this.fail,\n  })\n}\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function() {\n  this.emit('success')\n  this.cleanup()\n}\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data) {\n  this.emit('data', data)\n  this.onSuccess()\n}\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err) {\n  this.emit('error', err)\n  this.cleanup(true)\n}\n\nRequest.prototype.cleanup = function(fromError) {\n  this.data = null\n}\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function() {\n  this.onData(this.data)\n}\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index')\nvar Emitter = require('component-emitter')\nvar debug = require('debug')('engine.io-client:socket')\nvar index = require('indexof')\nvar parser = require('engine.io-parser')\nvar parseuri = require('parseuri')\nvar parseqs = require('parseqs')\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts)\n\n  opts = opts || {}\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri\n    uri = null\n  }\n\n  if (uri) {\n    uri = parseuri(uri)\n    opts.hostname = uri.host\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss'\n    opts.port = uri.port\n    if (uri.query) opts.query = uri.query\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host\n  }\n\n  this.secure = opts.secure\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80'\n  }\n\n  this.agent = opts.agent || false\n  this.hostname = opts.hostname\n  this.port = opts.port\n  this.query = opts.query || {}\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query)\n  this.upgrade = false !== opts.upgrade\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/'\n  this.forceJSONP = !!opts.forceJSONP\n  this.jsonp = false !== opts.jsonp\n  this.forceBase64 = !!opts.forceBase64\n  this.enablesXDR = !!opts.enablesXDR\n  this.timestampParam = opts.timestampParam || 't'\n  this.timestampRequests = opts.timestampRequests\n  this.transports = opts.transports || ['polling', 'websocket']\n  this.transportOptions = opts.transportOptions || {}\n  this.readyState = ''\n  this.writeBuffer = []\n  this.prevBufferLen = 0\n  this.policyPort = opts.policyPort || 843\n  this.rememberUpgrade = opts.rememberUpgrade || false\n  this.binaryType = null\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades\n  this.perMessageDeflate =\n    false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {}\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null\n  this.key = opts.key || null\n  this.passphrase = opts.passphrase || null\n  this.cert = opts.cert || null\n  this.ca = opts.ca || null\n  this.ciphers = opts.ciphers || null\n  this.rejectUnauthorized =\n    opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized\n  this.forceNode = !!opts.forceNode\n\n  // set on handshake\n  this.id = null\n  this.upgrades = null\n  this.pingInterval = null\n  this.pingTimeout = null\n\n  // set on heartbeat\n  this.pingIntervalTimer = null\n  this.pingTimeoutTimer = null\n\n  this.open()\n}\n\nSocket.priorWebsocketSuccess = false\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype)\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket\nSocket.Transport = require('./transport')\nSocket.transports = require('./transports/index')\nSocket.parser = require('engine.io-parser')\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function(name) {\n  debug('creating transport \"%s\"', name)\n  var query = clone(this.query)\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol\n\n  // transport name\n  query.transport = name\n\n  // per-transport options\n  var options = this.transportOptions[name] || {}\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n  })\n\n  return transport\n}\n\nfunction clone(obj) {\n  var o = {}\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i]\n    }\n  }\n  return o\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function() {\n  var transport\n  if (\n    this.rememberUpgrade &&\n    Socket.priorWebsocketSuccess &&\n    this.transports.indexOf('websocket') !== -1\n  ) {\n    transport = 'websocket'\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this\n    setTimeout(function() {\n      self.emit('error', 'No transports available')\n    }, 0)\n    return\n  } else {\n    transport = this.transports[0]\n  }\n  this.readyState = 'opening'\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport)\n  } catch (e) {\n    this.transports.shift()\n    this.open()\n    return\n  }\n\n  transport.open()\n  this.setTransport(transport)\n}\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport) {\n  debug('setting transport %s', transport.name)\n  var self = this\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name)\n    this.transport.removeAllListeners()\n  }\n\n  // set up transport\n  this.transport = transport\n\n  // set up transport listeners\n  transport\n    .on('drain', function() {\n      self.onDrain()\n    })\n    .on('packet', function(packet) {\n      self.onPacket(packet)\n    })\n    .on('error', function(e) {\n      self.onError(e)\n    })\n    .on('close', function() {\n      self.onClose('transport close')\n    })\n}\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function(name) {\n  debug('probing transport \"%s\"', name)\n  var transport = this.createTransport(name, { probe: 1 })\n  var failed = false\n  var self = this\n\n  Socket.priorWebsocketSuccess = false\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary =\n        !this.supportsBinary && self.transport.supportsBinary\n      failed = failed || upgradeLosesBinary\n    }\n    if (failed) return\n\n    debug('probe transport \"%s\" opened', name)\n    transport.send([{ type: 'ping', data: 'probe' }])\n    transport.once('packet', function(msg) {\n      if (failed) return\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name)\n        self.upgrading = true\n        self.emit('upgrading', transport)\n        if (!transport) return\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name\n\n        debug('pausing current transport \"%s\"', self.transport.name)\n        self.transport.pause(function() {\n          if (failed) return\n          if ('closed' === self.readyState) return\n          debug('changing transport and sending upgrade packet')\n\n          cleanup()\n\n          self.setTransport(transport)\n          transport.send([{ type: 'upgrade' }])\n          self.emit('upgrade', transport)\n          transport = null\n          self.upgrading = false\n          self.flush()\n        })\n      } else {\n        debug('probe transport \"%s\" failed', name)\n        var err = new Error('probe error')\n        err.transport = transport.name\n        self.emit('upgradeError', err)\n      }\n    })\n  }\n\n  function freezeTransport() {\n    if (failed) return\n\n    // Any callback called by transport should be ignored since now\n    failed = true\n\n    cleanup()\n\n    transport.close()\n    transport = null\n  }\n\n  // Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err)\n    error.transport = transport.name\n\n    freezeTransport()\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err)\n\n    self.emit('upgradeError', error)\n  }\n\n  function onTransportClose() {\n    onerror('transport closed')\n  }\n\n  // When the socket is closed while we're probing\n  function onclose() {\n    onerror('socket closed')\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name)\n      freezeTransport()\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen)\n    transport.removeListener('error', onerror)\n    transport.removeListener('close', onTransportClose)\n    self.removeListener('close', onclose)\n    self.removeListener('upgrading', onupgrade)\n  }\n\n  transport.once('open', onTransportOpen)\n  transport.once('error', onerror)\n  transport.once('close', onTransportClose)\n\n  this.once('close', onclose)\n  this.once('upgrading', onupgrade)\n\n  debug('probe transport: ', transport)\n  transport.open()\n}\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function() {\n  debug('socket open')\n  this.readyState = 'open'\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name\n  this.emit('open')\n  this.flush()\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes')\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i])\n    }\n  }\n}\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function(packet) {\n  if (\n    'opening' === this.readyState ||\n    'open' === this.readyState ||\n    'closing' === this.readyState\n  ) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data)\n\n    this.emit('packet', packet)\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat')\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data))\n        break\n\n      case 'pong':\n        this.setPing()\n        this.emit('pong')\n        break\n\n      case 'error':\n        var err = new Error('server error')\n        err.code = packet.data\n        this.onError(err)\n        break\n\n      case 'message':\n        this.emit('data', packet.data)\n        this.emit('message', packet.data)\n        break\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState)\n  }\n}\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function(data) {\n  this.emit('handshake', data)\n  this.id = data.sid\n  this.transport.query.sid = data.sid\n  this.upgrades = this.filterUpgrades(data.upgrades)\n  this.pingInterval = data.pingInterval\n  this.pingTimeout = data.pingTimeout\n  this.onOpen()\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return\n  this.setPing()\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat)\n  this.on('heartbeat', this.onHeartbeat)\n}\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function(timeout) {\n  clearTimeout(this.pingTimeoutTimer)\n  var self = this\n  self.pingTimeoutTimer = setTimeout(function() {\n    if ('closed' === self.readyState) return\n    self.onClose('ping timeout')\n  }, timeout || self.pingInterval + self.pingTimeout)\n}\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function() {\n  var self = this\n  clearTimeout(self.pingIntervalTimer)\n  self.pingIntervalTimer = setTimeout(function() {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout)\n    self.ping()\n    self.onHeartbeat(self.pingTimeout)\n  }, self.pingInterval)\n}\n\n/**\n * Sends a ping packet.\n *\n * @api private\n */\n\nSocket.prototype.ping = function() {\n  var self = this\n  this.sendPacket('ping', function() {\n    self.emit('ping')\n  })\n}\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  this.writeBuffer.splice(0, this.prevBufferLen)\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain')\n  } else {\n    this.flush()\n  }\n}\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function() {\n  if (\n    'closed' !== this.readyState &&\n    this.transport.writable &&\n    !this.upgrading &&\n    this.writeBuffer.length\n  ) {\n    debug('flushing %d packets in socket', this.writeBuffer.length)\n    this.transport.send(this.writeBuffer)\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length\n    this.emit('flush')\n  }\n}\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write = Socket.prototype.send = function(msg, options, fn) {\n  this.sendPacket('message', msg, options, fn)\n  return this\n}\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function(type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data\n    data = undefined\n  }\n\n  if ('function' === typeof options) {\n    fn = options\n    options = null\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return\n  }\n\n  options = options || {}\n  options.compress = false !== options.compress\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options,\n  }\n  this.emit('packetCreate', packet)\n  this.writeBuffer.push(packet)\n  if (fn) this.once('flush', fn)\n  this.flush()\n}\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function() {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing'\n\n    var self = this\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade()\n        } else {\n          close()\n        }\n      })\n    } else if (this.upgrading) {\n      waitForUpgrade()\n    } else {\n      close()\n    }\n  }\n\n  function close() {\n    self.onClose('forced close')\n    debug('socket closing - telling transport to close')\n    self.transport.close()\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose)\n    self.removeListener('upgradeError', cleanupAndClose)\n    close()\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose)\n    self.once('upgradeError', cleanupAndClose)\n  }\n\n  return this\n}\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function(err) {\n  debug('socket error %j', err)\n  Socket.priorWebsocketSuccess = false\n  this.emit('error', err)\n  this.onClose('transport error', err)\n}\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function(reason, desc) {\n  if (\n    'opening' === this.readyState ||\n    'open' === this.readyState ||\n    'closing' === this.readyState\n  ) {\n    debug('socket close with reason: \"%s\"', reason)\n    var self = this\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer)\n    clearTimeout(this.pingTimeoutTimer)\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close')\n\n    // ensure transport won't stay open\n    this.transport.close()\n\n    // ignore further transport communication\n    this.transport.removeAllListeners()\n\n    // set ready state\n    this.readyState = 'closed'\n\n    // clear session id\n    this.id = null\n\n    // emit close event\n    this.emit('close', reason, desc)\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = []\n    self.prevBufferLen = 0\n  }\n}\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function(upgrades) {\n  var filteredUpgrades = []\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i])\n  }\n  return filteredUpgrades\n}\n","module.exports = require('./socket')\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser')\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parseuri = require('parseuri');\r\nvar debug = require('debug')('socket.io-client:url');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = url;\r\n\r\n/**\r\n * URL parser.\r\n *\r\n * @param {String} url\r\n * @param {Object} An object meant to mimic window.location.\r\n *                 Defaults to window.location.\r\n * @api public\r\n */\r\n\r\nfunction url (uri, loc) {\r\n  var obj = uri;\r\n\r\n  // default to window.location\r\n  loc = loc || global.location;\r\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\r\n\r\n  // relative path support\r\n  if ('string' === typeof uri) {\r\n    if ('/' === uri.charAt(0)) {\r\n      if ('/' === uri.charAt(1)) {\r\n        uri = loc.protocol + uri;\r\n      } else {\r\n        uri = loc.host + uri;\r\n      }\r\n    }\r\n\r\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n      debug('protocol-less url %s', uri);\r\n      if ('undefined' !== typeof loc) {\r\n        uri = loc.protocol + '//' + uri;\r\n      } else {\r\n        uri = 'https://' + uri;\r\n      }\r\n    }\r\n\r\n    // parse\r\n    debug('parse %s', uri);\r\n    obj = parseuri(uri);\r\n  }\r\n\r\n  // make sure we treat `localhost:80` and `localhost` equally\r\n  if (!obj.port) {\r\n    if (/^(http|ws)$/.test(obj.protocol)) {\r\n      obj.port = '80';\r\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n      obj.port = '443';\r\n    }\r\n  }\r\n\r\n  obj.path = obj.path || '/';\r\n\r\n  var ipv6 = obj.host.indexOf(':') !== -1;\r\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\r\n\r\n  // define unique id\r\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\r\n  // define href\r\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\r\n\r\n  return obj;\r\n}\r\n","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar url = require('./url');\r\nvar parser = require('socket.io-parser');\r\nvar Manager = require('./manager');\r\nvar debug = require('debug')('socket.io-client');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = lookup;\r\n\r\n/**\r\n * Managers cache.\r\n */\r\n\r\nvar cache = exports.managers = {};\r\n\r\n/**\r\n * Looks up an existing `Manager` for multiplexing.\r\n * If the user summons:\r\n *\r\n *   `io('http://localhost/a');`\r\n *   `io('http://localhost/b');`\r\n *\r\n * We reuse the existing instance based on same scheme/port/host,\r\n * and we initialize sockets for each namespace.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction lookup (uri, opts) {\r\n  if (typeof uri === 'object') {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n\r\n  opts = opts || {};\r\n\r\n  var parsed = url(uri);\r\n  var source = parsed.source;\r\n  var id = parsed.id;\r\n  var path = parsed.path;\r\n  var sameNamespace = cache[id] && path in cache[id].nsps;\r\n  var newConnection = opts.forceNew || opts['force new connection'] ||\r\n                      false === opts.multiplex || sameNamespace;\r\n\r\n  var io;\r\n\r\n  if (newConnection) {\r\n    debug('ignoring socket cache for %s', source);\r\n    io = Manager(source, opts);\r\n  } else {\r\n    if (!cache[id]) {\r\n      debug('new io instance for %s', source);\r\n      cache[id] = Manager(source, opts);\r\n    }\r\n    io = cache[id];\r\n  }\r\n  if (parsed.query && !opts.query) {\r\n    opts.query = parsed.query;\r\n  }\r\n  return io.socket(parsed.path, opts);\r\n}\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.protocol = parser.protocol;\r\n\r\n/**\r\n * `connect`.\r\n *\r\n * @param {String} uri\r\n * @api public\r\n */\r\n\r\nexports.connect = lookup;\r\n\r\n/**\r\n * Expose constructors for standalone build.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Manager = require('./manager');\r\nexports.Socket = require('./socket');\r\n"],"sourceRoot":""}